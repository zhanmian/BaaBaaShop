<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="buy.baabaashop.dao.CustomerDao">

    <select id="selectCustomerByUsername" resultType="buy.baabaashop.entity.client.Customer">
        select user_id, username, password
        from customer
        where username = #{username}
    </select>

    <insert id="addCustomer" parameterType="buy.baabaashop.entity.client.Customer">
        insert into customer(
        username, password, phone, email
        )
        values(
        #{username}, #{password}, #{phone}, #{email}
        )
    </insert>

    <select id="selectOrderByUserId" resultMap="order">
          select
          id, order_code,
          total_amount, pay_type,
          create_time,  payment_time, receive_time,
          status, confirm_status,
          receiver_name, receiver_phone,
          province, city, town, detail_address,
          buyer_message
          from order_detail
          where user_id=#{userId}
          order by create_time desc
          limit #{from}, #{pageSize}
    </select>
    <resultMap id="order" type="buy.baabaashop.entity.OrderResult">
        <collection
                property="orderItemList"
                ofType="buy.baabaashop.entity.OrderItem"
                column="orderId=id"
                select="selectOrderItemByOrderId">
        </collection>
    </resultMap>

    <select id="selectOrderItemByOrderId" resultType="buy.baabaashop.entity.OrderItem">
        select
        order_id, product_id, product_name, product_code, product_picture, product_price,
        sku_id, sku_code, sku_price,
        spec1, spec2, spec3,
        quantity
        from order_item
        where order_id=#{orderId}
    </select>

    <select id="selectTotalRecordForOrderList" resultType="Integer">
        select count(id) from order_detail where user_id=#{userId}
    </select>

    <select id="searchProduct" resultType="buy.baabaashop.entity.Product">
        select id, product_name, product_price, picture, create_time
        from product
        where (product_name like concat('%',#{key},'%'))
        <if test="minPrice!=null and maxPrice!=null">
            and (product_price between #{minPrice} and #{maxPrice})
        </if>
        <if test="displayOrder==1">
            order by create_time desc
        </if>
        <if test="displayOrder==2">
            order by product_price desc
        </if>
        <if test="displayOrder==3">
            order by product_price asc
        </if>
        limit #{from}, #{pageSize}
    </select>

    <select id="selectTotalRecordForSearch" resultType="Integer">
        select count(id)
        from product
        where (product_name like concat('%',#{key},'%'))
        <if test="minPrice!=null and maxPrice!=null">
            and (product_price between #{minPrice} and #{maxPrice})
        </if>
        <if test="displayOrder==1">
            order by create_time desc
        </if>
        <if test="displayOrder==2">
            order by product_price desc
        </if>
        <if test="displayOrder==3">
            order by product_price asc
        </if>
    </select>

    <select id="selectAddress" resultType="buy.baabaashop.entity.client.Address">
        select address_id, province, city, town, detail_address, receiver_name, receiver_phone, postcode
        from customer_address
        where user_id = #{userId}
    </select>

    <insert id="addAddress">
        insert into customer_address (
          user_id, receiver_name, receiver_phone,
          province, city, town, detail_address, postcode
         )
         values (
          #{userId}, #{receiverName}, #{receiverPhone},
          #{province}, #{city}, #{town}, #{detailAddress}, #{postcode}
         )
    </insert>

    <select id="selectRecommendProduct" resultType="buy.baabaashop.entity.Product">
        select * from product where recommend_status=1
    </select>

    <select id="selectAllProductCategory" resultType="buy.baabaashop.entity.ProductCategory">
        select
        product_category.id, product_category.create_time,
        category_name, category_level, parent_id, count(product.product_category_id) as count
        from product_category
        left join product on product_category.id=product.product_category_id
        where parent_id not in (0)
        group by product_category.id
    </select>

    <sql id="product_category">
        select p.id, p.product_name, p.product_price, p.picture, pc.category_name, p.create_time
        from product p
        left join product_category pc on pc.id = p.product_category_id
        where pc.id=#{id}
    </sql>

    <select id="selectProductByCategoryId" resultType="buy.baabaashop.entity.Product">
       <include refid="product_category"></include>
        <if test="minPrice!=null and maxPrice!=null">
            and (p.product_price between #{minPrice} and #{maxPrice})
        </if>
        <if test="displayOrder==1">
            order by p.create_time desc
        </if>
        <if test="displayOrder==2">
            order by p.product_price desc
        </if>
        <if test="displayOrder==3">
            order by p.product_price asc
        </if>
        limit #{from}, #{pageSize}
    </select>

    <select id="selectTotalRecordOfProductByCategory" resultType="Integer">
        select count(*) from (<include refid="product_category"></include>) s
    </select>

    <select id="selectProductDetails" resultType="buy.baabaashop.entity.Product">
        select id, product_code, product_price, product_name, description, picture
        from product where
        <if test="id!=null"> id = #{id}</if>
    </select>

    <select id="selectProductAttribute" resultType="buy.baabaashop.entity.ProductAttribute">
        select pa.id, attribute_name, input_list, input_status
        from product_attribute pa
        left join product p on pa.attribute_category_id = p.product_attribute_category_id
        where
        <if test="id!=null">p.id = #{id}</if>
        and type = 0
    </select>

    <select id="selectAddAttributeValue" resultMap="productAttribute">
        select attribute_id, value from product_attribute_value where
        <if test="id!=null">product_id = #{id}</if>
    </select>
    <resultMap id="productAttribute" type="buy.baabaashop.entity.ProductAttribute">
        <result column="attribute_id" property="id"></result>
    </resultMap>

    <select id="selectSkuByProductId" resultType="buy.baabaashop.entity.ProductSku">
        select id, product_id, sku_code, sku_price, sku_stock, spec1, spec2, spec3
        from sku where
        <if test="productId!=null">product_id = #{productId}</if>
    </select>

    <select id="selectSkuByAttributes" resultType="buy.baabaashop.entity.ProductSku">
        select id, sku_code, sku_price, sku_stock
        from sku where
        <if test="productId!=null">product_id = #{productId}</if>
        <if test="spec1!=null">and spec1 = #{spec1}</if>
        <if test="spec2!=null">and spec2 = #{spec2}</if>
        <if test="spec3!=null">and spec3 = #{spec3}</if>
    </select>

    <select id="selectCustomerIdByUsername" resultType="Integer">
        select id from customer where
        <if test="username!=null">username = #{username}</if>
    </select>

    <select id="selectItemBySkuId" resultMap="item">
        select
        product_name, p.picture, p.product_price, p.product_code,
        s.id, sku_code, sku_price, sku_stock, spec1, spec2, spec3
        from product p, sku s
        where p.id=s.product_id and s.id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.skuId}
        </foreach>
    </select>
    <resultMap id="item" type="buy.baabaashop.entity.client.CartItem">
        <result property="skuId" column="id"></result>
    </resultMap>

    <update id="updateSkuStock">
        <foreach collection="list" item="item">
            update sku set sku_stock=(#{item.skuStock}-#{item.quantity})
            where id=#{item.skuId}
        </foreach>
    </update>

    <insert id="addOrder">
        <selectKey resultType="java.lang.Integer" keyProperty="orderId" order="AFTER">
            SELECT LAST_INSERT_ID() as orderId
        </selectKey>
        insert into order_detail (
        order_code, user_id, total_amount,
        pay_type, status, confirm_status, buyer_message,
        receiver_name, receiver_phone,
        province, city, town, detail_address,
        postcode
        )
        values(
        #{orderCode}, #{userId},
        #{totalAmount}, #{payType}, #{status}, #{confirmStatus}, #{buyerMessage},
        #{address.receiverName}, #{address.receiverPhone}, #{address.province},
        #{address.city}, #{address.town}, #{address.detailAddress},
        #{address.postcode}
        )
    </insert>

    <insert id="insertOrderItem">
        insert into order_item (
        order_id, order_code,
        product_id, product_code,
        product_price, product_name, product_picture,
        sku_id, sku_code, sku_price,
        spec1, spec2, spec3,
        quantity
        )
        values
        <foreach collection="cartItems" item="item" separator=",">
            (
            #{orderId}, #{orderCode},
            #{item.productId}, #{item.productCode}, #{item.productPrice}, #{item.productName},
            #{item.picture},
            #{item.skuId}, #{item.skuCode}, #{item.skuPrice},
            #{item.spec1}, #{item.spec2}, #{item.spec3},
            #{item.quantity}
            )
        </foreach>
    </insert>

    <update id="updateOrder">
        update order_detail
        <set>
            payment_time=now(),
            status=1,
            pay_code=#{payCode}
        </set>
        where order_code=#{orderCode}
    </update>

</mapper>